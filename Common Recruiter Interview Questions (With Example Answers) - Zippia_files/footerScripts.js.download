jQuery(document).ready(function() {
    jQuery(".btnzip").click(function() {
        jQuery(".header-bucket").toggleClass("open");
        jQuery(".btnzip").toggleClass("btnhide");
    });
    jQuery(".default-srh").focus(function() {
        jQuery(".cell").toggleClass("mobile");
    });

    jQuery(".navbar-header .navbar-toggle").click(function() {
        jQuery(".navbar-header").toggleClass("open-nav");
    });
    jQuery(".close-btn").click(function() {
        jQuery(".navbar-collapse").removeClass("in");
        jQuery(".navbar-header").removeClass("open-nav");
        jQuery(".navbar-toggle").addClass("collapsed");
    });

    const explorerDropdown = document.getElementById("explorer-dropdown");
    const explorerDropdownMenu = document.getElementById("explorer-dropdown-small-tri");
    if(explorerDropdown){
        explorerDropdown.addEventListener(
            "mouseover",
            (event) => {
                jQuery('#explorer-dropdown-content').attr("style", "display: block !important");
                jQuery('#explorer-dropdown-small-tri').attr("style", "display: block !important");

            },
            false
        );
        if(explorerDropdownMenu){
            explorerDropdownMenu.addEventListener(
                "mouseover",
                (event) => {
                    jQuery('#explorer-dropdown-content').attr("style", "display: block !important");
                    jQuery('#explorer-dropdown-small-tri').attr("style", "display: block !important");

                },
                false
            );
        }

        explorerDropdown.addEventListener("mouseleave", (e) => {
            jQuery('#explorer-dropdown-content').attr("style", "display: none !important");
            jQuery('#explorer-dropdown-small-tri').attr("style", "display: none !important");
        });
    }

    var hostname = window.location.hostname;
    if (hostname.includes('dev.zippia') || hostname.includes('dev2.zippia') || hostname === 'localhost') {
        jQuery("#googleadsense1").attr("data-adtest", "on")
        jQuery("#googleadsense2").attr("data-adtest", "on")
    } else {
        jQuery("#googleadsense1").attr("data-adtest", "off")
        jQuery("#googleadsense2").attr("data-adtest", "off")
    }
    (adsbygoogle = window.adsbygoogle || []).push({});
    (adsbygoogle = window.adsbygoogle || []).push({});
});

function getCriteria() {
    return;
}

function showVersionDetail() {
    console.log('Branch Name : release/v1.6.2, Tag Number : v1.1');
}

function closeWPMenu() {
    if (jQuery("#showMenuHeader").hasClass("activeWP")) {
        jQuery("#showMenuHeader").removeClass("activeWP");
        jQuery("#showMenuHeader").removeClass("active");
        jQuery("#navbarWP").slideToggle();
    }
}

function hideshowMenuWP() {
    if (jQuery("#showMenuHeader").hasClass("activeWP")) {
        jQuery("#showMenuHeader").removeClass("activeWP");
        jQuery('#navbarWP').attr("style", "display: none !important");
        // jQuery("#navbarWP").slideToggle();
    } else {
        jQuery("#showMenuHeader").addClass("activeWP");
        jQuery('#navbarWP').attr("style", "display: block !important");
        // jQuery("#navbarWP").slideToggle();
    }
}
function shareSocialFacebook() {
    window.open('https://www.facebook.com/sharer/sharer.php?u=' + window.location.href.replace(location.hash, ""),
        '_blank');
}

function shareSocialTwitter() {
    window.open("https://twitter.com/share?url=" + window.location.href.replace(location.hash, ""), '_blank');
}

function shareCopyLink() {
    jQuery('#copied').css('display', 'block');
    document.getElementById("copyPasteShare").value = window.location.href.replace(location.hash, "");
    document.getElementById("copyPasteShare").focus();
    document.getElementById("copyPasteShare").select();
    document.execCommand('copy');
    setTimeout(function() {
        jQuery('#copied').css('opacity', '1');
        jQuery('#mobileCopy').animate({
            opacity: 0
        }, function() {
            jQuery(this).text("Copied!")
                .animate({
                    opacity: 1
                });
        });
    }, 1);
    setTimeout(function() {
        jQuery('#copied').css('opacity', '0');
    }, 1000);

    setTimeout(function() {
        jQuery('#copied').css('display', 'none');
        jQuery('#mobileCopy').animate({
            opacity: 0
        }, function() {
            jQuery(this).html(
                '<img src="/wp-content/themes/zippia/assets/img/clipboard.svg" alt="Clipboard logo">'
            )
                .animate({
                    opacity: 1
                });
        });
    }, 2000);
}

jQuery(window).scroll(function() {
    if (jQuery("#articleSeparator").offset() && (jQuery(this).scrollTop() >= (jQuery("#articleSeparator").offset().top -
        410))) {
        jQuery("#desktopShareFixed").css("top", ((jQuery("#articleSeparator").offset().top - 310) - jQuery(this).scrollTop()));
    } else {
        jQuery("#desktopShareFixed").css("top", Math.max(100, 675 - jQuery(this).scrollTop()));
    }
});

// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/
function resizeViewHeight() {
    var vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', vh + "px");
}
resizeViewHeight();
window.addEventListener("resize", resizeViewHeight)

function clean(str) {
    temp = str.replace(/[^a-zA-Z 0-9]+/g, '');
    temp = temp.replace(/ /g, '-');
    return temp.toLowerCase();
}

function searchAutocompleteResultsForValue(typeahead, value) {
    var found = false;
    typeahead.siblings('.tt-menu').children('.tt-dataset').children('.tt-suggestion').each(
        function(index, item) {
            if (jQuery(item).text().toLowerCase() == value.toLowerCase()) {
                found = true;
                return;
            }
        });
    return found;
}

function triggerAutoClick(element, setVariable, callback) {

    element.unbind('firstSelected');
    element.bind('firstSelected', function(object, suggestion, dataset) {
        var text = '';
        if (suggestion && suggestion.original_name) {
            text = suggestion.original_name;
        } else if (suggestion && suggestion.display_name) {
            text = suggestion.display_name;
        }

        jQuery(this).val(text);
        window[setVariable] = suggestion;
        callback();
    })
    var e = jQuery.Event('keydown');
    e.keyCode = e.which = 999;
    e.ctrl = element;
    element.trigger(e);

}

function onClickSearchDesktop() {
    var url = "undefined";
    var jobTitleElement = jQuery('#searchJobTitle');
    var locationElement = jQuery('#searchLocation');
    var jobTitle = jQuery.trim(jobTitleElement.val());
    var location = jQuery.trim(locationElement.val());
    if (jobTitle && !searchAutocompleteResultsForValue(jobTitleElement, jobTitle)) {
        return triggerAutoClick(jobTitleElement, 'keyJobType', onClickSearchDesktop);
    }
    var suggestionList = locationElement.siblings('.tt-menu').children('.tt-dataset').children('.tt-suggestion');
    if (locationElement && (typeof suggestionList !== 'undefined' && suggestionList.length > 0) && !
        searchAutocompleteResultsForValue(locationElement, location)) {
        return triggerAutoClick(locationElement, 'keyJobLocation', onClickSearchDesktop);
    }
    if (jobTitle.indexOf('(') !== -1) {
        jobTitle = jobTitle.substring(jobTitle.indexOf('(') + 1, jobTitle.length - 1);
    }
    if (jobTitle != "" && location != "") {
        setRecentSearchedTitles();
        setRecentLocations();
        url = WPVars.front_end_elb_url + clean(jobTitle) + "-" + clean(location) + '-jobs/';
    } else if (jobTitle != "" && location == "") {
        setRecentSearchedTitles();
        url = WPVars.front_end_elb_url + clean(jobTitle) + '-jobs/';
    } else if (jobTitle == "" && location != "") {
        setRecentLocations();
        url = WPVars.front_end_elb_url + clean(location) + '-jobs/';
    }
    if (url != "undefined") {
        window.location.href = url;
    }
}
function showRemainingDiv(divId, linkObj) {
    jQuery("#" + divId).css('display', 'block');
    jQuery(linkObj).css('display', 'none');
}

function openUrl(url) {
    window.open(base64_decode(url));
}

jQuery('#myTabs a').click(function(e) {
    e.preventDefault()
    jQuery(this).tab('show')
})
// Footer Start
function showMoreCollegeGrads() {
    document.getElementById("moreCollege").remove();
    var college = document.querySelectorAll('.hiddenCollege');
    [].forEach.call(college, function(el) {
        el.classList.remove("hiddenCollege");
    });
}

function showMoreCompanySitemapLinks() {
    document.getElementById("moreCompany").remove();
    var college = document.querySelectorAll('.hiddenCompany');
    [].forEach.call(college, function(el) {
        el.classList.remove("hiddenCompany");
    });
}



function shareClicklEmail() {
    window.open('mailto: ?subject=' + WPVars.get_title + '&body=' + window.location.href.replace(
        location.hash, ""), '_blank');
}



jQuery("#clickme").click(function() {
    jQuery("#book").animate({
        width: "toggle",
        height: "toggle"
    }, {
        duration: 5000,
        specialEasing: {
            width: "linear",
            height: "easeOutBounce"
        },
        complete: function() {
            jQuery(this).after("<div>Animation complete.</div>");
        }
    });
});





// <!-----------------  Header  Search js script  ------------->
var get_window_width = jQuery(window).width();
if (get_window_width <= 991) {
    jQuery('.btn-search-top').on('click', function() {
        jQuery(".navbar-brand").toggleClass("logoy");
        jQuery(".optn-srh").css({
            "opacity": "1",
            "width": "43%"
        }).toggle(400);
        jQuery(".default-srh").css({
            "opacity": "1",
            "width": "43%"
        }).toggle(400);
        jQuery(".default-srh").attr('placeholder', 'Job Title');
        jQuery(".optn-srh").attr('placeholder', 'Location');
        return false;
    });
} else {
    jQuery('.default-srh').on('focus', function() {
        jQuery('.optn-srh').css("opacity", "1");
        jQuery(".btn-search-top").css({
            "display": "none"
        });
        jQuery(".close-it").css({
            "opacity": "1",
            "display": "inline-block"
        });
        jQuery(".optn-srh").animate({
            opacity: 1,
            width: '175px'
        }, {
            duration: 100,
            specialEasing: {
                width: "linear"
            },
            start: function() {
                jQuery(".default-srh").animate({
                    opacity: 1,
                    width: '175px'
                }, {
                    duration: 100,
                    specialEasing: {
                        width: "linear"
                    },
                    complete: function() {
                        jQuery(".default-srh").attr('placeholder', 'Job Title');
                        jQuery(".optn-srh").attr('placeholder', 'Location');

                        var jQueryaSelected = jQuery('.cell').find('#search-top-left');

                        if (jQueryaSelected.hasClass('btn-search-top-left')) {

                        } else {
                            jQuery(".cell").append(
                                '<button type="button" onclick="onClickSearchDesktop();" class="btn-search-top-left" id="search-top-left"><span aria-hidden="true" class="glyphicon glyphicon-search"></span></button>'
                            );
                        }
                    }
                });


            }
        });

        return false;

    });
}


jQuery('.close-it').on('click', function() {
    jQuery(".close-it").css({
        "display": "none",
        "opacity": "0"
    });
    jQuery('.optn-srh').css("width", "0px");
    jQuery('.default-srh').css("width", "330px");
    jQuery(".cell").find('.btn-search-top-left').remove();
    jQuery(".default-srh").attr('placeholder', '');
    jQuery(".btn-search-top").css({
        "display": "inline"
    });

    jQuery(".default-srh").animate({
        opacity: 1,
        width: '180px'
    }, 100, 'linear', function() {

    });

});
// <!----------------- End of  Header  Search js script  ------------->
    /****************LOCAL STORAGE*********************/
    var constants = {
    'recentTitles': 'recentTitles',
    'recentLocations': 'recentLocations',
    'totalRecentSearchItems': 10
}

    var keyJobLocation;
    var keyJobType;

    function setRecentSearchedTitles() {
    // Parse any JSON previously stored in allEntries
    var existingEntries = JSON.parse(localStorage.getItem('zippia.cache.data.recentTitles'));
    isEmpty = false;
    if (existingEntries == null) {
    isEmpty = true;
    existingEntries = [];
}

    if (isEmpty == true) {
    var json = new Object();
    json['key'] = 'recentTitles';
    json['value'] = new Array(keyJobType);
    //existingEntries.unshift(json);
    localStorage.setItem('zippia.cache.data.recentTitles', JSON.stringify(json));
} else {
    for (var i = 0; i < existingEntries['value'].length; i++) {
    //alert(existingEntries[0]['value'][i].id+"\n"+keyJobType.id)
    if (existingEntries['value'][i].id == keyJobType.id) {
    existingEntries['value'].splice([i][0], 1);
    break;
}
}

    existingEntries['value'].unshift(keyJobType);
    if (existingEntries['value'].length == constants.totalRecentSearchItems + 1) {
    existingEntries['value'].splice(constants.totalRecentSearchItems, 1)
}
    localStorage.setItem('zippia.cache.data.recentTitles', JSON.stringify(existingEntries));
}
};


    function getRecentSearchedTitles() {
    var existingEntries = JSON.parse(localStorage.getItem('zippia.cache.data.recentTitles'));
    if (existingEntries == null) {
    existingEntries = [];
    return existingEntries;
}
    return existingEntries['value'];
}


    function setRecentLocations() {
    // Parse any JSON previously stored in allEntries
    var existingEntries = JSON.parse(localStorage.getItem('zippia.cache.data.recentLocations'));
    isEmpty = false;
    if (existingEntries == null) {
    isEmpty = true;
    existingEntries = [];
}

    if (isEmpty == true) {
    var json = new Object();
    json['key'] = 'recentLocations';
    json['value'] = new Array(keyJobLocation);
    //existingEntries.unshift(json);
    localStorage.setItem('zippia.cache.data.recentLocations', JSON.stringify(json));
} else {
    for (var i = 0; i < existingEntries['value'].length; i++) {
    //alert(existingEntries[0]['value'][i].id+"\n"+keyJobType.id)
    if (existingEntries['value'][i].id == keyJobLocation.id) {
    existingEntries['value'].splice([i][0], 1);
    break;
}
}

    existingEntries['value'].unshift(keyJobLocation);
    if (existingEntries['value'].length == constants.totalRecentSearchItems + 1) {
    existingEntries['value'].splice(constants.totalRecentSearchItems, 1)
}
    localStorage.setItem('zippia.cache.data.recentLocations', JSON.stringify(existingEntries));
}
};


    function getRecentLocations() {
    var existingEntries = JSON.parse(localStorage.getItem('zippia.cache.data.recentLocations'));
    if (existingEntries == null) {
    existingEntries = [];
    return existingEntries;
}
    return existingEntries['value'];
}
    /****************LOCAL STORAGE*********************/

    jQuery('.typeahead-devs').bind('typeahead:selected', function(obj, datum, name) {
    keyJobType = (datum);
});
    jQuery('.typeahead-devs1').bind('typeahead:selected', function(obj, datum, name) {
    keyJobLocation = (datum);
});

    function base64_decode(data) {
    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,
    ac = 0,
    dec = '',
    tmp_arr = [];
    if (!data) {
    return data;
}
    data += '';
    do {
    // unpack four hexets into three octets using index points in b64
    h1 = b64.indexOf(data.charAt(i++));
    h2 = b64.indexOf(data.charAt(i++));
    h3 = b64.indexOf(data.charAt(i++));
    h4 = b64.indexOf(data.charAt(i++));
    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;
    o1 = bits >> 16 & 0xff;
    o2 = bits >> 8 & 0xff;
    o3 = bits & 0xff;
    if (h3 == 64) {
    tmp_arr[ac++] = String.fromCharCode(o1);
} else if (h4 == 64) {
    tmp_arr[ac++] = String.fromCharCode(o1, o2);
} else {
    tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);
}
} while (i < data.length);
    dec = tmp_arr.join('');
    return decodeURIComponent(escape(dec.replace(/\0+jQuery/, '')));
}